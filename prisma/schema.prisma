generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(cuid())
  name     String?
  email    String?   @unique
  image    String?
  password String?
  accounts Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

enum CATEGORY {
  DESIGN
  PROJECT
  ARCHIVE
  MORE
}

model Post {
  id         Int       @id @default(autoincrement())
  category   CATEGORY
  urlWebsite String?
  urlGithub  String
  title      String
  content    Content[]
  technology String[]
  createdAt  DateTime  @default(now())

  @@map("Post")
}

model Content {
  id     Int    @id @default(autoincrement())
  url    String
  title  String
  desc   String
  postId Int
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@map("Content")
}
